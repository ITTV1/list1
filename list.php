<?php
//
//list
//
//    (PHP 4, PHP 5, PHP 7)
//
//list — Присваивает переменным из списка значения подобно массиву
//Описание ¶
//list ( mixed $var1 [, mixed $... ] ) : array
//
//    Подобно array(), это не функция, а языковая конструкция. list() используется для того, чтобы присвоить списку переменных значения за одну операцию.
//
//Замечание:
//
//    До PHP 7.1.0, list() работала только с индексированными массивами и принимала числовые индексы начиная с 0.
//
//Внимание
//
//В PHP 5 list() присваивает значения начиная с самого правого. В PHP 7 list() - с самого левого.
//
//Если вы используете обычные переменные, можете не думать об этом, но, если вы используете массивы
// с индексами, вы ожидаете, что порядок элементов в массиве будет ровно таким, как вы его определили в list(), слева направо, но в PHP 5 вы получите обратный порядок.
//
//Вообще говоря, желательно не полагаться на конкретный порядок операций, так как в будущем это поведение может быть изменено.
//Список параметров ¶
//
//var1
//
//    Переменная.
//
//    Возвращаемые значения ¶
//
//Возвращает присвоенный массив.
//Список изменений ¶
//Версия 	Описание
//7.1.0 	Теперь возможно задавать ключи в list(). Это позволяет разыменовывать ассоциативные массивы и массивы с индексами не по порядку.
//7.0.0 	Изменен порядок операций присвоения.
//7.0.0 	Выражение list() больше не может быть полностью пустым.
//7.0.0 	Больше нельзя разбирать строки с помощью этой функции.
//Примеры ¶


$info = array('кофе', 'коричневый', 'кофеин');

// Составить список всех переменных
list($drink, $color, $power) = $info;
echo "$drink - $color, а $power делает его особенным.\n";

// Составить список только некоторых из них
list($drink, , $power) = $info;
echo "В $drink есть $power.\n";

// Или пропустить все, кроме третьей
list( , , $power) = $info;
echo "Мне нужен $power!\n";



